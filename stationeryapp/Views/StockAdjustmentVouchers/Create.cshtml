@model stationeryapp.Models.StockAdjustmentVoucherDetail
@using stationeryapp.Models

@{
    ViewBag.Title = "Create";
    StockAdjustmentVoucher stockAdjustmentVoucher = ViewBag.voucher;
}

<h2>Create</h2>

<h4>StockAdjustmentVoucher</h4>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>Voucher No: </dt>
        <dd>@stockAdjustmentVoucher.AdjustmentVoucherNumber</dd>

        <dt>Date issued: </dt>
        <dd>@stockAdjustmentVoucher.Date</dd>

        <dt>By:</dt>
        <dd>@stockAdjustmentVoucher.Remarks</dd>
    </dl>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal">
        <table id="details">
            <thead>
                <tr>
                    <th></th>
                    <th>@Html.DisplayNameFor(model => model.ItemNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.QuantityAdjusted)</th>
                    <th>@Html.DisplayNameFor(model => model.Reason)</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.HiddenFor(model => model.AdjustmentDetailsNumber, new { htmlAttributes = new { @class = "form-control" } }) </td>
                    <td>
                        @Html.EditorFor(model => model.ItemNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.QuantityAdjusted, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    <td>
                        @Html.HiddenFor(model => model.AdjustmentVoucherNumber)
                    </td>
                    <td><input type="button" value="Remove" onclick="Remove(this)" /></td>
                </tr>

            </tbody>
            <tfoot>
                <tr></tr>
                <tr>
                    <td></td>
                    <td>
                        <input class="btnAdd btn btn-default" type="button" name="name" value="Add" />
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <input id="btnSubmit" type="button" value="Submit" class="btn btn-default" />
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>

    </div>
}

@section scripts{
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
    <script>
        var adjVoucher = {}

        $(".btnAdd").click(function () {
            @{Model.AdjustmentDetailsNumber = Model.AdjustmentDetailsNumber + 1;};
            var td1 =  '<td>@Html.HiddenFor(model => model.AdjustmentDetailsNumber, new { htmlAttributes = new { @class = "form-control" } })</td>';
            var td2 =  '<td>@Html.HiddenFor(model => model.AdjustmentVoucherNumber)</td>';
            var td3 = '<td>@Html.EditorFor(model => model.ItemNumber, new { htmlAttributes = new { @class = "form-control" } })</td>';
            var td4 = '<td>@Html.EditorFor(model => model.QuantityAdjusted, new { htmlAttributes = new { @class = "form-control" } })</td>';
            var td5 = '<td>@Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })</td>';
            var td6 = '<td><input type="button" value="Remove" onclick="Remove(this)" /></td>';
            $("tbody").append('<tr>' + td1 + td3 + td4 + td5 + td2 + td6 + '</tr>');
        });

        function getAllData() {
            var data = [];
            $('tbody tr').each(function () {
                var AdjustmentDetailsNumber = $(this).find('#AdjustmentDetailsNumber').val();
                var AdjustmentVoucherNumber = $(this).find('#AdjustmentVoucherNumber').val();
                var ItemNumber = $(this).find('#ItemNumber').val();
                var QuantityAdjusted = $(this).find('#QuantityAdjusted').val();
                var Reason = $(this).find('#Reason').val();
                var allData = {
                    'AdjustmentDetailsNumber': AdjustmentDetailsNumber,
                    'AdjustmentVoucherNumber': AdjustmentVoucherNumber,
                    'ItemNumber': ItemNumber,
                    'QuantityAdjusted': QuantityAdjusted,
                    'Reason': Reason
                }
                data.push(allData);
            });
            console.log(data);
            return data;
        }



        $('#btnSubmit').click(function () {
            var data = JSON.stringify(getAllData());
            console.log(data);
            var data1 = [];
            var voucherInfo = { 'AdjustmentVoucherNumber': "@stockAdjustmentVoucher.AdjustmentVoucherNumber", 'Status': "@stockAdjustmentVoucher.Status", 'Remarks': "@stockAdjustmentVoucher.Remarks", 'Date':"@stockAdjustmentVoucher.Date" };
            data1.push(voucherInfo);
            var data2 = JSON.stringify(data1);
            console.log(data1);
            $.ajax({
                url: '/StockAdjustmentVouchers/SaveData',
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                data: JSON.stringify({ 'passdata': data, 'vdata': data2 }),
                success: function () {
                    alert("Data added successfully");
                },
                error: function () {
                    alert("Error while inserting data");
                }
            });
        });

        function Remove(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete this row?")) {
                //Get the reference of the Table.
                var table = $("#details")[0];

                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };
    </script>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
