@model List<stationeryapp.Models.ConsolidatedRequest>

@{
    ViewBag.Title = "Create";
}

<h2>Create Retrieval Form</h2>


@using (Html.BeginForm("Update", "StationeryRetrievalForms", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <table>
        <tr>
            <td>From:</td>
            <td>@ViewData["FromDate"]</td>
        </tr>

        <tr>
            <td>To:</td>
            <td><input type="date" name="toDate" /></td>
        </tr>
    </table>

    <table class="table" align="center">

        <tr>
            <th rowspan="2">Bin Number</th>
            <th rowspan="2">Stationary Description</th>
            <th colspan="2">Total Quantity</th>
            <th colspan="3">Breakdown by Department</th>
        </tr>

        <tr>
            <th>Needed</th>
            <th>Retrieved</th>
            <th>Department Name</th>
            <th>Needed</th>
            <th>Actual</th>
        </tr>

        @for (int i = 0; i < Model.Count; i++)
        {
            <tr>
                <td>@Model[i].binNumber</td>
                <td>@Model[i].description</td>
                <td>@Model[i].totalNeeded</td>
                <td>@Model[i].totalRetrieved</td>
                @{
                    for (int j = 0; j < Model[i].requests.Count; j++)
                    {
                        if (j == 0)
                        {
                            <td>@Model[i].requests[j].departmentCode</td>
                            <td>@Model[i].requests[j].needed</td>
                            <td>
                                @Html.TextBox("Details[" + @i + "]" + @j, Model[i].requests[j].actual)
                                @*@Model[i].requests[j].actual*@
                            </td>
                        }
                        else
                        {

                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>@Model[i].requests[j].departmentCode</td>
                            <td>@Model[i].requests[j].needed</td>
                            <td>
                                @Html.TextBox("Details[" + @i + "]" + @j, Model[i].requests[j].actual)
                                @*@Model[i].requests[j].actual*@
                            </td>
                        </tr>
                    }

                }
                }
                </tr>
            }

    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<div class="form-horizontal">
        <h4>StationeryRetrievalForm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FormNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FormNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FormNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@