@model List<stationeryapp.Models.RetrievalRecord>

@{
    ViewBag.Title = "Create";
 }
@{ 
//string formDetailsNumber = (string)ViewData["FormDetailsNumber"];
}

<h2>Create Retrieval Form</h2>


@using (Html.BeginForm("Update", "StationeryRetrievalForms", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @*@Html.Hidden("formDetailsNumber",formDetailsNumber)*@
    <table>
        <tr>
            <td>From:</td>
            <td>@ViewData["FromDate"]</td>
        </tr>

        <tr>
            <td>To:</td>
            <td><input type="date" name="toDate" /></td>
        </tr>
    </table>

    <table class="table" align="center">

        <tr>
            <th rowspan="2">Bin Number</th>
            <th rowspan="2">Stationary Description</th>
            <th colspan="2">Total Quantity</th>
            <th colspan="3">Breakdown by Department</th>
        </tr>

        <tr>
            <th>Needed</th>
            <th>Retrieved</th>
            <th>Department Code</th>
            <th>Needed</th>
            <th>Actual</th>
        </tr>

        @{
            int sum = 0;
            HashSet<string> bin_number = new HashSet<string>();
            for (int i = 0; i < Model.Count; i++)
            {

                sum += Model[i].needed;
                <tr>
                    @if (bin_number.Add(Model[i].binNumber))
                    {
                        // added, originally not in hashset
                        <td>
                            @*@Html.TextBox("Record[" + @i + "].binNumber", Model[i].binNumber, new { @readonly = "readonly" })*@
                            <input type="text" name="binnumber" value="@Model[i].binNumber">
                        </td>
                        <td>
                            @*@Html.TextBox("Record[" + @i + "].description", Model[i].description, new { @readonly = "readonly" })*@
                            <input type="text" name="description" value="@Model[i].description">

                        </td>

                        <td></td>
                        <td></td>
                    }
                    else
                    {
                        // Not added, originally in hashset
                        <td></td>
                        <td></td>
                        <td>
                            @sum
                        </td>
                        <td>
                            @sum
                        </td>
                    }
                    <td>
                        @*@Html.TextBox("Record[" + @i + "].departmentCode", Model[i].departmentCode, new { @readonly = "readonly" })*@
                        <input type="text" name="departmentcode" value="@Model[i].departmentCode">
                    </td>
                    <td>
                        @*@Html.TextBox("Record[" + @i + "].needed", Model[i].needed,new { @readonly = "readonly" })*@
                        <input type="number" name="needed" value="@Model[i].needed">
                    </td>
                    
                    <td>
                        @*@Html.TextBox("Record[" + @i + "].actual", Model[i].actual)*@
                        <input type="number" name="actual" value="@Model[i].actual">
                    </td>
                </tr>
            }
        }

    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
}

@*<div class="form-horizontal">
        <h4>StationeryRetrievalForm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FormNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FormNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FormNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>*@