@model List<stationeryapp.Models.RForm>

@{
    ViewBag.Title = "Retrieve";
}

<h2>Stationery Retrieval Form</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table id="details" class="table" align="center">

            <tr>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].BinNumber)
                </th>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].Description)
                </th>
                <th colspan="2">
                    Total Quantity
                </th>
                <th colspan="3">Breakdown by Department</th>
            </tr>

            <tr>
                <th>Needed</th>
                <th>Retrieved</th>
                <th>Department Name</th>
                <th>@Html.DisplayNameFor(model => model[0].stationeryRetrievalFormDetail.Needed)</th>
                <th>@Html.DisplayNameFor(model => model[0].stationeryRetrievalFormDetail.Actual)</th>
            </tr>

            @for (int i = 0; i < Model.Count; i++)
            {
                @Html.HiddenFor(model => model[i].stationeryRetrievalFormDetail.FormNumber)
                @Html.HiddenFor(model => model[i].stationeryRetrievalFormDetail.FormDetailsNumber)
                @Html.HiddenFor(model => model[i].stationeryRetrievalFormDetail.ItemNumber)
                @*@Html.HiddenFor(model => model[i].stationeryRetrievalFormDetail.Needed)*@
                @Html.HiddenFor(model => model[i].stationeryRetrievalFormDetail.DepartmentCode)
                <tr>
                    @if (i == 0 || Model[i].Description != Model[i - 1].Description)
                    {
                        <td>@Html.DisplayTextFor(model => model[i].BinNumber)</td>
                        <td>@Html.DisplayTextFor(model => model[i].Description)</td>
                        <td>@Html.TextBox(Model[i].Description+"TotalNeeded",0, new { @class = "TotalNeeded", @readonly = "readonly" }) </td>
                        <td>@Html.TextBox(Model[i].Description+"TotalActual",0, new { @class = "TotalActual", @readonly = "readonly" })</td>
                        ;
                    }
                    else
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        ;
                    }
                    <td>@Html.DisplayTextFor(model => model[i].stationeryRetrievalFormDetail.DepartmentCode)</td>
                    <td>@Html.TextBoxFor(model => model[i].stationeryRetrievalFormDetail.Needed, new { @class = Model[i].Description + "_Needed", @readonly = "readonly" })</td>
                    <td>@Html.EditorFor(model => model[i].stationeryRetrievalFormDetail.Actual, new { @class = Model[i].Description + "_Actual" })</td>

                </tr>
            }

        </table>


        <div class="form-group" align="right">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Commit Retrieval Form" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
